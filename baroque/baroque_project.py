import os
import sys


class BaroqueProject(object):
    """ Stores details about the current project.

    It takes a source_directory and a destination_directory.
    source_directory: Either a shipment, collection, or item directory
    destination_directory: Location to store reports generated by baroque

    An initial instantiation of this object might look like:

    {
        "items": [
            {
            "id": "",
            "path": "",
            "files": {
                "wav": [],
                "mp4": [],
                "jpg": [],
                "mets": [],
                "md5": [],
                "txt": []
            },
            "errors": []
            }
        ],
        "source": source_directory,
        "destination": destination_directory
    }
    """

    def __init__(self, source_directory, destination_directory):
        if not os.path.exists(source_directory):
            print("source_directory does not exist")
            sys.exit()
        if not os.path.exists(destination_directory):
            print("destiantion_directory does not exist")
            sys.exit()

        self.source_directory = source_directory
        self.destination_directory = destination_directory
        source_type = self.characterize_source_directory()
        if source_type == "shipment":
            self.process_shipment(source_directory)
        elif source_type == "collection":
            self.process_collection(source_directory)
        elif source_type == "item":
            self.process_item(source_directory)

    def characterize_source_directory(self):
        """ Determine if source_directory is a shipment, collection, or item """
        pass

    def process_shipment(self, shipment_directory):
        """ Process all collections in a shipment """
        pass

    def process_collection(self, collection_directory):
        """ Process all items in a collection """
        pass

    def process_item(self, item_directory):
        """ Process all files in an item """
        pass
